---------------------------------------------------------------------------
-- Rules: 
-- ------
-- 1) Any DB objects should be created w/o schema prefix,
--    since this file is executed in a separate schema context.
-- 2) There should be no DROP statements in this script, since
--    all objects created in the default schema will be cleaned-up outside.
---------------------------------------------------------------------------

---------------------------------------------------------------------------
-- Setup: 
---------------------------------------------------------------------------
CREATE FUNCTION install_test() 
RETURNS TEXT AS $$ 
declare
    an float[] := '{1,2,3}';
    b float[] := '{4,5,7}';
    result_num1 float := 0;
    result_num2 float := 0;
    result_num3 float := 0;
    result TEXT;
begin

    SELECT INTO result_num1 array_dot(array_mult(array_add(an,b), array_sub(an,b)), array_mult(array_div(an,b), normalize(an)));
    b[4] = NULL;
    SELECT INTO result_num2 (array_max(b)+array_min(b)+array_sum(b)+array_sum_big(b)+
    array_mean(b)+array_stddev(b));
    SELECT INTO result_num3 array_sum(array_scalar_mult(array_fill(array_of_float(20), 234.343::FLOAT8),3.7::FLOAT));
    result_num1 = result_num1+result_num2+result_num3-17371.7254700712;
    
    SELECT INTO result CASE WHEN((result_num1 < .01)AND(result_num1 > -.01)) THEN 'PASS' ELSE 'FAIL' END;
    
    IF result = 'FAIL' THEN
        RAISE EXCEPTION 'Failed install check';
    END IF;
       
    RETURN result;
    
end $$ language plpgsql;

---------------------------------------------------------------------------
-- Test
---------------------------------------------------------------------------
SELECT install_test();

-- array_agg
create table test as select generate_series(1,100) x;
select array_agg(x) from test;

-- array_scalar_add
select assert(
    relative_error(
        array_scalar_add(ARRAY[0.8, 9.5, 2.6]::float8[], 2.2::float8),
        ARRAY[3.0, 11.7, 4.8]::float8[]) < 1e-6,
    'array_scalar_add: Wrong results');
